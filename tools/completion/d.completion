#
# Initially based on 'npm completion' starter
#

# TODO: docs on COMP_WORDBREAKS?
COMP_WORDBREAKS=${COMP_WORDBREAKS/=/}
COMP_WORDBREAKS=${COMP_WORDBREAKS/@/}
export COMP_WORDBREAKS



if type complete &>/dev/null; then
  _d_completion () {
    local si="$IFS"
    IFS=$'\n' COMPREPLY=($(COMP_CWORD="$COMP_CWORD" \
                           COMP_LINE="$COMP_LINE" \
                           COMP_POINT="$COMP_POINT" \
                           /bin/sh ./dashdash-completion.sh -- "${COMP_WORDS[@]}" \
                           2>/var/tmp/d.completion.log)) || return $?
    IFS="$si"
  }
  #XXX
  # Wart: '-o filenames' needed for trailing slash on dirs and nospace so can
  # complete into dirs. However that interferes with '$foo<TAB>' envvar
  # completion, AFAICT: I always get a leading '\$'.
  complete -o default -F _d_completion d
elif type compdef &>/dev/null; then
  _d_completion() {
    si=$IFS
    compadd -- $(COMP_CWORD=$((CURRENT-1)) \
                 COMP_LINE=$BUFFER \
                 COMP_POINT=0 \
                 echo XXX -- "${words[@]}" \
                 2>/dev/null)
    IFS=$si
  }
  compdef _d_completion d
elif type compctl &>/dev/null; then
  _d_completion () {
    local cword line point words si
    read -Ac words
    read -cn cword
    let cword-=1
    read -l line
    read -ln point
    si="$IFS"
    IFS=$'\n' reply=($(COMP_CWORD="$cword" \
                       COMP_LINE="$line" \
                       COMP_POINT="$point" \
                       echo XXX -- "${words[@]}" \
                       2>/dev/null)) || return $?
    IFS="$si"
  }
  compctl -K _d_completion d
fi
